a = 1; b = 2; c = 3
# arrays
a = c(1,2,3)
b = c("x", "y", "z")
c = 1:5
matrix(1:10,2,5)
codes = data.frame(id.x=1:4, code=c("B","B","A","D"))
colors = data.frame(id.y=1:4, color=c("red","red",NA,"white"))
d = merge( codes, colors, by.x="id.x", by.y="id.y")
View(colors)
View(codes)
View(d)
str(d)
summary(d)
is.na(d)
dim(d)
c
c[-2]
c[c(2,4)]
b
b[c(1,3)]
d
d[1:3,]
d[,1]
d[c("code", "color")]
sample(1:10)
x=c(1,2,3, 4, 5)
y=c(1,4,9, 16, 25)
plot(x,y)
plot(y,x)
plot(y)
x11()
plot(x,y)
plot(x,y, main="My first Figure Using R",  sub="what is subtitle?")
library(sna)
library(igraph)
install.packages("sna")
library(sna)
library(igraph)
plotG <- function(g) {
plot(g,
# force-directed layout
layout=layout.fruchterman.reingold,
#vertex.label=NA,
vertex.label.font=2, vertex.size=5,
vertex.color="blue",
vertex.frame.color=FALSE,
edge.color="black")
}
relations <- data.frame(from=c("Bob", "Cecil", "Cecil", "David", "David", "Esmeralda"),
to=c("Alice", "Bob", "Alice", "Alice", "Bob", "Alice"),
weight=c(4,5,5,2,1,1))
View(relations)
SampleGraph <- read.csv("A_Sample_CSV_Graph.csv")
View(SampleGraph)
g <- graph.data.frame(relations, directed=TRUE)
g1 <- graph.data.frame(SampleGraph, directed=TRUE)
View(g)
View(g1)
View(g1)
g1 <- graph.data.frame(SampleGraph, directed=TRUE)
View(g1)
View(g1)
plot(g, edge.width=E(g)$weight)
plotG(g)
plotG(g1)
g <- graph.ring(10)
plotG(g)
degree(g)
g <- graph.ring(10)
plotG(g)
degree(g)
degree(g)[1]
g1 <- erdos.renyi.game(10, 1/10)
plotG(g1)
degree(g1)
degree(g1)[30]
g2 <- erdos.renyi.game(50, 1/10, type=c("gnp"),directed = FALSE,loops = FALSE)
plotG(g2)
degree(g2)
degree.distribution(g2)
g3 <- erdos.renyi.game(50, 50, type=c("gnm"))
plotG(g3)
g4 <- barabasi.game(10)
plotG(g4)
degree.distribution(g4)
N=10
plink = 0.2
graph=rgraph(N,1, plink, "graph", FALSE)
plotG(graph)
degree(graph)
sum(degree(graph))
degree(graph)
gden(graph, mode="graph")
is.connected(graph)
connectedness(graph)
is.isolate(graph,1)
is.isolate(graph,10)
g1 <- graph.adjacency(graph)
betweenness(g1)
g1 <- graph.adjacency(graph)
betweenness(g1)
g1 <- graph.adjacency(graph)
betweenness(g1)
g1 <- graph.adjacency(graph)
betweenness(g1)
geo=geodist(graph)
geo$dist
g1 <- graph.adjacency(graph)
View(g1)
betweenness(g1)
View(g1)
g1[[1]]
closeness(g1)
ego.extract(graph, 6)
g<-random.graph.game(20, 5/20, directed=TRUE)
plot(g)
page.rank(g)$vector
g2<-graph.star(10)
plot(g2)
page.rank(g2)$vector
plot(g)
g2<-graph.star(10, mode = c("undirected"))
plot(g2)
g3 <- graph.ring(10)
page.rank(g3)$vector
reset <- seq(vcount(g3))
page.rank(g3, personalized=reset)$vector
g <- graph.star(10)
plotG(g)
hub.score(g)$vector
authority.score(g)$vector
g2 <- graph.ring(10)
plotG(g2)
hub.score(g2)$vector
authority.score(g2)$vector
